version: "3"
services:
  db:
    platform: linux/x86_64
    image: mysql:5.7
    ports:
      - "3003:3306"
    volumes:
      - ./server/db:/docker-entrypoint-initdb.d/:ro
    environment:
      MYSQL_ROOT_PASSWORD: root
  client:
    build: ./client
    links:
      - publisher
      - subscriber
    ports:
      - "8080:8080"

    volumes: ["./client:/src"]
    command: ["npm", "run", "serve"]
  publisher:
    build: ./server
    depends_on: 
      - "db"
      - "kafka"
    ports:
      - "5000:5000"
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
    volumes: ["./server:/app"]
    restart: unless-stopped
    command: ["flask", "run", "--host=0.0.0.0"]
  zookeeper:
    image: zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic_test:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  subscriber:
    build: ./subscriber
    depends_on: 
      - "db"
      - "kafka"
    ports:
      - "5002:5002"
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./sub_app.py
    volumes: ["./subscriber:/subscriber"]
    restart: unless-stopped
    command: ["flask", "run", "--host=0.0.0.0", "--port=5002"]
