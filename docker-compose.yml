version: "3"
services:
  db:
    platform: linux/x86_64
    image: mysql:5.7
    ports:
      - "3003:3306"
    volumes:
      - ./server/db:/docker-entrypoint-initdb.d/:ro
    environment:
      MYSQL_ROOT_PASSWORD: root
  client:
    build: ./client
    links:
      - publisher
      - subscriber
    ports:
      - "8080:8080"
    # volumes: ["./client:/src"]
    command: ["npm", "run", "serve"]
  zookeeper:
    image: zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
  kafka1:
    image:  wurstmeister/kafka
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9093,OUTSIDE://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  kafka2:
    image:  wurstmeister/kafka
    ports:
      - "29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9093,OUTSIDE://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  kafka3:
    image:  wurstmeister/kafka
    ports:
      - "39092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka3:9093,OUTSIDE://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:39092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  publisher:
    build: ./server
    depends_on: 
      - db
      - kafka1
    ports:
      - "5000:5000"
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
    # volumes: ["./server:/app"]
    restart: unless-stopped
    command: ["flask", "run", "--host=0.0.0.0"]
  subscriber:
    build: ./subscriber
    depends_on: 
      - db
      - kafka1
    ports:
      - "5002:5002"
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./sub_app.py
    # volumes: ["./subscriber:/subscriber"]
    restart: unless-stopped
    command: ["flask", "run", "--host=0.0.0.0", "--port=5002"]
